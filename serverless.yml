service: tileserverless

frameworkVersion: ">=3.29.0 <4.0.0"

package:
  patterns:
    - '!.git/**'
    - '!src/**'
    - '!docs/**'
    - '!.*'
    - '!tsconfig.*'
    - '!package-lock.json'
    - '!yarn.lock'
    - '!README.md'
    - '!serverless.yml'

provider:
  name: aws
  runtime: nodejs16.x
  memorySize: 256
  region: ap-northeast-1
  apiGateway:
    shouldStartNameWithService: true # serverless@^2

  versionFunctions: false
  logRetentionInDays: 30
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: geolonia-slsdeploymentbucket-${self:provider.region}
  httpApi:
    cors:
      allowedOrigins:
        - "*"
      allowedHeaders:
        - Content-Type
      allowedMethods:
        - GET
      maxAge: 6000
  vpc:
    securityGroupIds:
      !Split
        - ","
        - ${self:custom.sgId}
    subnetIds:
      !Split
        - ","
        - ${self:custom.subnetId}
  environment:
    MOUNT_PATH: ${self:custom.mountPath}
    CLOUDFRONT_DOMAIN_NAME: ${env:CLOUDFRONT_DOMAIN_NAME}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "elasticfilesystem:ClientMount"
            - "elasticfilesystem:ClientWrite"
          Resource:
            - ${self:custom.efsApArn}

custom:
  sgId: ${env:TILESERVERLESS_SECURITY_GROUP_ID}
  subnetId: ${env:TILESERVERLESS_SUBNET_ID}
  accessPointId: ${env:TILESERVERLESS_FILESYSTEM_ACCESS_POINT_ID}
  fsId: ${env:TILESERVERLESS_FILESYSTEM_ID}
  mountPath: /mnt/efs
  efsApArn:
    Fn::Join:
      - ":"
      - - arn:aws:elasticfilesystem
        - ${self:provider.region}
        - !Ref AWS::AccountId
        - access-point/${self:custom.accessPointId}

resources:
  extensions:
    TileLambdaFunction:
      Properties:
        FileSystemConfigs:
          - Arn: ${self:custom.efsApArn}
            LocalMountPath: ${self:custom.mountPath}
    MetaLambdaFunction:
      Properties:
        FileSystemConfigs:
          - Arn: ${self:custom.efsApArn}
            LocalMountPath: ${self:custom.mountPath}

functions:
  tile:
    handler: dist/tile.handler
    events:
      - httpApi:
          # Remove .mvt extension with Lambda
          path: "/{ver}/tiles/{z}/{x}/{y}"
          method: get

  meta:
    handler: dist/meta.handler
    events:
      - httpApi:
          path: "/{ver}/tiles.json"
          method: get

      - httpApi:
          path: "/{ver}/metadata.json"
          method: get
