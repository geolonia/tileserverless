on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn
      - run: yarn test

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        if: ->
          github.ref == refs/heads/main' ||
          github.ref == refs/heads/develop'
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCID }}:role/${{ secrets.AWS_DEPLOYMENT_ROLE_NAME }}
          aws-region: ap-northeast-1

      - name: Deploy (tagged version)
        if: github.ref == refs/heads/main
        run: yarn deploy:v1
        env:
          TILESERVERLESS_SECURITY_GROUP_ID: ${{ secrets.TILESERVERLESS_SECURITY_GROUP_ID }}
          TILESERVERLESS_SUBNET_ID: ${{ secrets.TILESERVERLESS_SUBNET_ID }}
          TILESERVERLESS_FILESYSTEM_ACCESS_POINT_ID: ${{ secrets.TILESERVERLESS_FILESYSTEM_ACCESS_POINT_ID }}
          TILESERVERLESS_FILESYSTEM_ID: ${{ secrets.TILESERVERLESS_FILESYSTEM_ID }}
          CLOUDFRONT_DOMAIN_NAME: ${{ secrets.CLOUDFRONT_DOMAIN_NAME_V1 }}
          TRUSTED_KEY_GROUPS: ${{ secrets.TRUSTED_KEY_GROUPS_V1 }}
          CLOUDFRONT_ACM_CERTIFICATE_ARN: ${{ secrets.CLOUDFRONT_ACM_CERTIFICATE_ARN_V1 }}

      - name: Deploy (non-tagged version)
        if: github.ref == refs/heads/develop
        run: yarn deploy:dev
        env:
          TILESERVERLESS_SECURITY_GROUP_ID: ${{ secrets.TILESERVERLESS_SECURITY_GROUP_ID }}
          TILESERVERLESS_SUBNET_ID: ${{ secrets.TILESERVERLESS_SUBNET_ID }}
          TILESERVERLESS_FILESYSTEM_ACCESS_POINT_ID: ${{ secrets.TILESERVERLESS_FILESYSTEM_ACCESS_POINT_ID }}
          TILESERVERLESS_FILESYSTEM_ID: ${{ secrets.TILESERVERLESS_FILESYSTEM_ID }}
          CLOUDFRONT_DOMAIN_NAME: ${{ secrets.CLOUDFRONT_DOMAIN_NAME }}
          TRUSTED_KEY_GROUPS: ${{ secrets.TRUSTED_KEY_GROUPS }}
          CLOUDFRONT_ACM_CERTIFICATE_ARN: ${{ secrets.CLOUDFRONT_ACM_CERTIFICATE_ARN }}
